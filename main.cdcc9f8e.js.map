{"version":3,"sources":["scripts/main.js"],"names":["detailsUrl","request","url","id","fetch","then","response","ok","Error","status","statusText","json","getPhones","getPhonesId","data","phonesId","map","phone","getFirstReceivedDetails","Promise","race","result","firstReceivedDetails","addResultPromise","getAllSuccessfulDetails","allSettled","results","allSuccessfulDetails","value","push","getThreeFastestDetails","numberOfId","clonePhonesId","threeFastestDetails","getDetails","indexFirstId","indexOf","splice","i","className","title","resultOfThePromise","div","document","createElement","insertAdjacentHTML","ul","append","name","body","catch","err","alert"],"mappings":";AAAA,aAkHC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhHD,IAAMA,EAAN,qEAGMC,EAAU,SAACC,GAAKC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,QAClBC,OAAAA,MAASF,GAAAA,OAAAA,GAAMC,OAAAA,IACnBE,KAAK,SAAAC,GACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAASF,GAAAA,OAAAA,EAASG,OAAYH,OAAAA,OAAAA,EAASI,aAG5CJ,OAAAA,EAASK,UAIhBC,EAAY,WAAMX,OAAAA,EAAQD,IAWhC,SAASa,EAAYC,GAGZC,OAFUD,EAAKE,IAAI,SAAAC,GAASA,OAAAA,EAAMd,KAK3C,SAASe,EAAwBH,GACxBI,OAAAA,QAAQC,KAAKL,EAASC,IAAI,SAAAb,GAAMF,OAAAA,EAAQD,EAAgBG,IAAAA,OAAAA,EAA5B,aAChCE,KAAK,SAAAgB,GACEC,IAAAA,EAAuB,CAACD,GAMvBC,OAJPC,EAAiB,iBACf,iBACAD,GAEKA,IAIb,SAASE,EAAwBT,GACxBI,OAAAA,QAAQM,WAAWV,EAASC,IAAI,SAAAb,GAC9BF,OAAAA,EAAQD,EAAgBG,IAAAA,OAAAA,EAA/B,aAECE,KAAK,SAAAqB,GACEC,IADS,EACTA,EAAuB,GAERD,EAAAA,EAAAA,GAHN,IAGe,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBL,IAAAA,EAAmB,EAAA,MACxBA,EAAOO,OACTD,EAAqBE,KAAKR,EAAOO,QALtB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAaRD,OAJPJ,EAAiB,iBACf,iBACAI,GAEKA,IAIb,SAASG,EAAuBf,EAAUgB,GAClCC,IAAAA,EAAoBjB,EAAAA,GACpBkB,EAAsB,GAEnBC,SAAAA,EAAWpB,GAClBK,QAAQC,KAAKN,EAAKE,IAAI,SAAAb,GAAMF,OAAAA,EAAQD,EAAgBG,IAAAA,OAAAA,EAA5B,aACrBE,KAAK,SAASgB,GACPc,IAAAA,EAAeH,EAAcI,QAAQf,EAAOlB,KAE5B,IAAlBgC,EACFD,EAAWpB,IAEXkB,EAAcK,OAAOF,EAAc,GACnCF,EAAoBJ,KAAKR,MAK5B,IAAA,IAAIiB,EAAI,EAAGA,EAAIP,EAAYO,IAC9BJ,EAAWF,GAGNC,OAAAA,EAGT,SAASV,EAAiBgB,EAAWC,EAAOC,GACpCC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIH,UAAYA,EAEhBG,EAAIG,mBAAmB,aAEjBL,qBAAAA,OAAAA,EAFN,oBAMMM,IAAAA,EAAKH,SAASC,cAAc,MAElCF,EAAIK,OAAOD,GAEXL,EAAmBzB,IAAI,SAAAC,GAAS6B,OAAAA,EAAGD,mBAAmB,YAC3C5B,gBAAAA,OAAAA,EAAMd,GACXc,aAAAA,OAAAA,EAAM+B,KAFgB,sBAM5BL,SAASM,KAAKF,OAAOL,GA/FvB9B,IACGP,KAAK,SAAAgB,GAAUR,OAAAA,EAAYQ,KAC3BhB,KAAK,SAAAgB,GACJH,EAAwBG,GACxBG,EAAwBH,GACxBS,EAAuBT,EAAQ,KAEhC6B,MAAM,SAAAC,GAAOC,OAAAA,MAAMD","file":"main.cdcc9f8e.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst detailsUrl = `https://mate-academy.github.io/\r\nphone-catalogue-static/api/phones`;\r\n\r\nconst request = (url, id = '.json') => {\r\n  return fetch(`${url}${id}`)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`${response.status} - ${response.statusText}`);\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n};\r\n\r\nconst getPhones = () => request(detailsUrl);\r\n\r\ngetPhones()\r\n  .then(result => getPhonesId(result))\r\n  .then(result => {\r\n    getFirstReceivedDetails(result);\r\n    getAllSuccessfulDetails(result);\r\n    getThreeFastestDetails(result, 3);\r\n  })\r\n  .catch(err => alert(err));\r\n\r\nfunction getPhonesId(data) {\r\n  const phonesId = data.map(phone => phone.id);\r\n\r\n  return phonesId;\r\n};\r\n\r\nfunction getFirstReceivedDetails(phonesId) {\r\n  return Promise.race(phonesId.map(id => request(detailsUrl, `/${id}.json`)))\r\n    .then(result => {\r\n      const firstReceivedDetails = [result];\r\n\r\n      addResultPromise('first-received',\r\n        'First Received',\r\n        firstReceivedDetails);\r\n\r\n      return firstReceivedDetails;\r\n    });\r\n};\r\n\r\nfunction getAllSuccessfulDetails(phonesId) {\r\n  return Promise.allSettled(phonesId.map(id => {\r\n    return request(detailsUrl, `/${id}.json`);\r\n  }))\r\n    .then(results => {\r\n      const allSuccessfulDetails = [];\r\n\r\n      for (const result of results) {\r\n        if (result.value) {\r\n          allSuccessfulDetails.push(result.value);\r\n        }\r\n      };\r\n\r\n      addResultPromise('all-successful',\r\n        'All Successful',\r\n        allSuccessfulDetails);\r\n\r\n      return allSuccessfulDetails;\r\n    });\r\n};\r\n\r\nfunction getThreeFastestDetails(phonesId, numberOfId) {\r\n  const clonePhonesId = [...phonesId];\r\n  const threeFastestDetails = [];\r\n\r\n  function getDetails(data) {\r\n    Promise.race(data.map(id => request(detailsUrl, `/${id}.json`)))\r\n      .then(function(result) {\r\n        const indexFirstId = clonePhonesId.indexOf(result.id);\r\n\r\n        if (indexFirstId === -1) {\r\n          getDetails(data);\r\n        } else {\r\n          clonePhonesId.splice(indexFirstId, 1);\r\n          threeFastestDetails.push(result);\r\n        }\r\n      });\r\n  };\r\n\r\n  for (let i = 0; i < numberOfId; i++) {\r\n    getDetails(clonePhonesId);\r\n  }\r\n\r\n  return threeFastestDetails;\r\n};\r\n\r\nfunction addResultPromise(className, title, resultOfThePromise) {\r\n  const div = document.createElement('div');\r\n\r\n  div.className = className;\r\n\r\n  div.insertAdjacentHTML('afterbegin', `\r\n    <h1>\r\n      ${title}\r\n    </h1>\r\n  `);\r\n\r\n  const ul = document.createElement('ul');\r\n\r\n  div.append(ul);\r\n\r\n  resultOfThePromise.map(phone => ul.insertAdjacentHTML('beforeend', `\r\n    <li id=${phone.id}>\r\n      ${phone.name}\r\n    </li>\r\n  `));\r\n\r\n  document.body.append(div);\r\n};\r\n"]}